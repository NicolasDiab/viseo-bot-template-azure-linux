{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
      "siteName": {
        "type": "string",
        "metadata": {
          "description": "The name of the web app that you wish to create."
        },
        "defaultValue": "webappname"
      },
      "sku": {
        "type": "string",
        "allowedValues": [
          "B1",
          "B2",
          "B3",
          "S1",
          "S2",
          "S3",
          "P1",
          "P2",
          "P3",
          "P4"
        ],
        "defaultValue": "B1",
        "metadata": {
          "description": "The pricing tier for the hosting plan"
        }
      },
      "workerSize": {
        "type": "string",
        "allowedValues": [
          "0",
          "1",
          "2"
        ],
        "defaultValue": "0",
        "metadata": {
          "description": "The instance size of the hosting plan (small, medium, or large)."
        }
      },
      "nodeJsVersion": {
        "type": "string",
        "defaultValue": "8.9.4",
        "metadata": {
            "description": "Nodejs version, make sure that the App Service supports the version you set here."
        }
      },
      "bot-secret": {
        "type": "secureString",
        "defaultValue": "your secret here",
        "metadata": {
            "description": "Secret used to decode node's encrypted config"
        }
      },
      "bot-env": {
        "type": "string",
        "defaultValue": "dev",
        "metadata": {
            "description": "Key used to retrieve environement in conf/config.js"
        }
      },
      "bot-host": {
        "type": "string",
        "defaultValue": "",
        "metadata": {
            "description": "External URL for the bot like https://your-bot.azurewebsites.net"
        }
      }
    },
    "variables": {
      "servicePlanName": "[concat('serviceplan',uniqueString(resourceGroup().id))]"
    },
    "resources": [
      {
        "type": "Microsoft.Web/serverfarms",
        "name": "[variables('servicePlanName')]",
        "apiVersion": "2016-03-01",
        "location": "[resourceGroup().location]",
        "sku": {
          "name": "[parameters('sku')]",
          "capacity": "[parameters('workerSize')]"
        },
        "kind": "linux",
        "properties": {
          "workerSizeId": 0,
          "reserved": true,
          "hostingEnvironment": ""
        }
      },
      {
        "type": "Microsoft.Web/sites",
        "name": "[parameters('siteName')]",
        "apiVersion": "2016-03-01",
        "location": "[resourceGroup().location]",
        "properties": {
          "name": "[parameters('siteName')]",
          "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('servicePlanName'))]"
        },
        "dependsOn": [
          "[resourceId('Microsoft.Web/serverfarms', variables('servicePlanName'))]"
        ],
        "resources": [
          {
            "name": "appsettings",
            "type": "config",
            "apiVersion": "2016-03-01",
            "dependsOn": [
              "[resourceId('Microsoft.Web/sites', parameters('siteName'))]"
            ],
            "tags": {
              "displayName": "appSettings"
            },
            "properties": {
              "DOCKER_CUSTOM_IMAGE_NAME": "dockeridchatbot/viseo-bot-docker-azurewebapp",
              "WEBSITES_ENABLE_APP_SERVICE_STORAGE": "true",
              "WEBSITE_PORT": "1880"
            }
          },
          {
            "apiVersion": "2015-08-01",
            "name": "logs",
            "type": "config",
            "dependsOn": [
              "[resourceId('Microsoft.Web/Sites', parameters('siteName'))]"
            ],
            "tags": {
              "displayName": "Logs"
            },
            "properties": {
              "applicationLogs": {
                "fileSystem": {
                  "level": "Verbose"
                }
              },
              "httpLogs": {
                "fileSystem": {
                  "retentionInMb": 40,
                  "enabled": false
                }
              },
              "failedRequestsTracing": {
                "enabled": true
              },
              "detailedErrorMessages": {
                "enabled": true
              }
            }
          }
        ]
      }
    ]
  }